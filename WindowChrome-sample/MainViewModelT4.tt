<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using System.Windows.Input;				// ICommand
using Microsoft.TeamFoundation.MVVM;    // ViewModelBase

namespace WindowChrome_sample
{
    public partial class MainViewModel : ViewModelBase
    {

<# // 常時利用可能なボタン #>
<# var always = new string[]{ 
  "Minimize",
  "Close"
}; #>

<# // 条件付きで利用可能なボタン #>
<# var conditional = new string[]{ 
  "Maximize",
  "Restore"
}; #>



<# foreach(var a in always ) #>
<# { #>
        private ICommand _<#= a #>Command;
        public ICommand <#= a #>Command
        {
            get
            {
                if (_<#= a #>Command == null)
                {
                    _<#= a #>Command = new RelayCommand(Execute<#= a #>Command);
                }
                return _<#= a #>Command;
            }
        }
<# } #>

<# foreach(var c in conditional ) #>
<# { #>
        private ICommand _<#= c #>Command;
        public ICommand <#= c #>Command
        {
            get
            {
                if (_<#= c #>Command == null)
                {
                    _<#= c #>Command = new RelayCommand(Execute<#= c #>Command, CanExecute<#= c #>Command);
                }
                return _<#= c #>Command;
            }
        }
<# } #>

    }
}